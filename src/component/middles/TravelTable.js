import React from "react";
import {
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Typography,
  Paper,
} from "@mui/material";

const travelData = [
  {
    route: "‡∏ö‡∏∂‡∏á‡∏´‡∏ô‡∏≠‡∏á‡πÅ‡∏ß‡∏á‡∏ï‡∏£‡∏≤‡∏ä‡∏π - Baan Heng",
    distance: 4.88,
    vehicles: [
      {
        type: "‡∏°‡∏≠‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏ã‡∏Ñ‡πå (40km/1L)",
        fuels: [
          {
            name: "‡πÅ‡∏Å‡πä‡∏™‡πÇ‡∏ã‡∏Æ‡∏≠‡∏•‡πå 91",
            price: 35.28,
            volume: 122.0,
            co2: 0.28,
            cost: 4.3,
          },
          {
            name: "‡πÅ‡∏Å‡πä‡∏™‡πÇ‡∏ã‡∏Æ‡∏≠‡∏•‡πå 95",
            price: 35.65,
            volume: 122.0,
            co2: 0.28,
            cost: 4.35,
          },
          {
            name: "‡πÅ‡∏Å‡πä‡∏™‡πÇ‡∏ã‡∏Æ‡∏≠‡∏•‡πå E20",
            price: 33.5,
            volume: 122.0,
            co2: 0.28,
            cost: 4.09,
          },
        ],
      },
      {
        type: "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå (15km/1L)",
        fuels: [
          {
            name: "‡πÅ‡∏Å‡πä‡∏™‡πÇ‡∏ã‡∏Æ‡∏≠‡∏•‡πå 91",
            price: 35.28,
            volume: 325.54,
            co2: 0.74,
            cost: 11.48,
          },
          {
            name: "‡πÅ‡∏Å‡πä‡∏™‡πÇ‡∏ã‡∏Æ‡∏≠‡∏•‡πå E20",
            price: 33.5,
            volume: 325.54,
            co2: 0.74,
            cost: 10.91,
          },
        ],
      },
      {
        type: "‡∏£‡∏ñ‡∏ï‡∏π‡πâ (10km/1L)",
        fuels: [
          {
            name: "‡∏î‡∏µ‡πÄ‡∏ã‡∏• B7",
            price: 32.94,
            volume: 488.0,
            co2: 1.1,
            cost: 16.07,
          },
          {
            name: "‡∏î‡∏µ‡πÄ‡∏ã‡∏• Premium",
            price: 44.94,
            volume: 488.0,
            co2: 1.1,
            cost: 21.94,
          },
        ],
      },
    ],
  },
  // üîÅ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ
];

const TravelTable = () => {
  return (
    <TableContainer component={Paper}>
      <Table>
        <TableHead sx={{ backgroundColor: "#f5f5f5" }}>
          <TableRow>
            <TableCell rowSpan={2}>
              <b>‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á</b>
            </TableCell>
            <TableCell rowSpan={2}>
              <b>‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á</b>
            </TableCell>
            <TableCell rowSpan={2}>
              <b>‡∏û‡∏≤‡∏´‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</b>
            </TableCell>
            <TableCell colSpan={5} align="center">
              <b>‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</b>
            </TableCell>
          </TableRow>
          <TableRow>
            <TableCell>‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô</TableCell>
            <TableCell>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏¥‡∏ï‡∏£‡∏•‡∏∞</TableCell>
            <TableCell>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ</TableCell>
            <TableCell>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏Ñ‡∏≤‡∏£‡πå‡∏ö‡∏≠‡∏ô</TableCell>
            <TableCell>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô (‡∏ö‡∏≤‡∏ó)</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {travelData.map((routeRow, routeIdx) => {
            const routeVehicleCount = routeRow.vehicles.reduce(
              (sum, v) => sum + v.fuels.length,
              0
            );

            let vehicleRowIndex = 0;

            return routeRow.vehicles.map((vehicle, vIdx) => {
              return vehicle.fuels.map((fuel, fIdx) => {
                return (
                  <TableRow key={`${routeIdx}-${vIdx}-${fIdx}`}>
                    {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á (‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°) */}
                    {vIdx === 0 && fIdx === 0 && (
                      <TableCell rowSpan={routeVehicleCount}>
                        <Typography variant="body2">
                          {routeRow.route}
                        </Typography>
                      </TableCell>
                    )}

                    {/* ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á */}
                    {vIdx === 0 && fIdx === 0 && (
                      <TableCell rowSpan={routeVehicleCount}>
                        {routeRow.distance}
                      </TableCell>
                    )}

                    {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏û‡∏≤‡∏´‡∏ô‡∏∞ (merge ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ row ‡∏Ç‡∏≠‡∏á‡∏û‡∏≤‡∏´‡∏ô‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡πÜ) */}
                    {fIdx === 0 && (
                      <TableCell rowSpan={vehicle.fuels.length}>
                        {vehicle.type}
                      </TableCell>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô */}
                    <TableCell>{fuel.name}</TableCell>
                    <TableCell>{fuel.price.toFixed(2)}</TableCell>
                    <TableCell>{fuel.volume.toFixed(2)} ml</TableCell>
                    <TableCell>{fuel.co2.toFixed(2)} kg CO‚ÇÇe</TableCell>
                    <TableCell>{fuel.cost.toFixed(2)}</TableCell>
                  </TableRow>
                );
              });
            });
          })}
        </TableBody>
      </Table>
    </TableContainer>
  );
};

export default TravelTable;
