import React, { useState } from "react";
import {
    Box,
    Button,
    TextField,
    Typography,
    Switch,
    FormControlLabel,
    Grid,
    Stack,
} from "@mui/material";
import { useParams } from "react-router-dom";

function MainAddPlaces() {
    const { placeType } = useParams();

    const [form, setForm] = useState({
        name: "",
        usage: "TH",
        quantity: "",
        bannerFile: null,
        detailFile: null,
        history: "",
        activity: "",
        expense: "",
        tourControl: "",
        food: "",
        tourismSeason: "",
        electricityUsage: "",
        waterUsage: "",
        garbageUsage: "",
        waterTreatment: "",
        cleaning: "",
        tourismSystemChange: "",
        contact: "",
        address: "",
        remark: "",
        googleMap: "",
    });

    const handleChange = (field) => (event) => {
        const value = event.target.type === "file"
            ? event.target.files[0]
            : event.target.value;
        setForm((prev) => ({ ...prev, [field]: value }));
    };

    const handleSwitchChange = (event) => {
        setForm((prev) => ({
            ...prev,
            usage: event.target.checked ? "TH" : "EN",
        }));
    };

    const handleCancel = () => {
        // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°
        setForm({
            name: "",
            usage: "TH",
            quantity: "",
            bannerFile: null,
            detailFile: null,
            history: "",
            activity: "",
            expense: "",
            tourControl: "",
            food: "",
            tourismSeason: "",
            electricityUsage: "",
            waterUsage: "",
            garbageUsage: "",
            waterTreatment: "",
            cleaning: "",
            tourismSystemChange: "",
            contact: "",
            address: "",
            remark: "",
            googleMap: "",
        });
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        console.log("form", form);


        // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô logic ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        console.log(form);
    };

    return (
        <Box
            sx={{
                p: 3,
                maxWidth: "1000px",
                bgcolor: "#239A2B",
                borderRadius: 4,
                color: "white",
                mx: "auto",
            }}
            component="form"
            onSubmit={handleSubmit}
        >
            <Typography variant="h6" gutterBottom>
                ‡πÄ‡∏û‡∏¥‡πà‡∏°: {placeType.replaceAll("_", " ")}
            </Typography>

            <Grid container spacing={2}>
                {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ */}
                <Grid item xs={12}>
                    <Typography variant="subtitle1" sx={{ mt: 2, mb: 1 }}>
                        üó∫Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
                    </Typography>
                </Grid>

                <Grid item xs={12} sm={6}>
                    <TextField
                        fullWidth
                        variant="filled"
                        label="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà"
                        value={form.name}
                        onChange={handleChange("name")}
                        InputProps={{
                            style: {
                                color: "#f1f8e9",
                                backgroundColor: "#1b5e20",
                            },
                        }}
                        InputLabelProps={{ style: { color: "#c8e6c9" } }}
                    />
                </Grid>

                <Grid item xs={12} sm={6}>
                    <TextField
                        fullWidth
                        variant="filled"
                        label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
                        value={form.quantity}
                        onChange={handleChange("quantity")}
                        InputProps={{
                            style: {
                                color: "#f1f8e9",
                                backgroundColor: "#1b5e20",
                            },
                        }}
                        InputLabelProps={{ style: { color: "#c8e6c9" } }}
                    />
                </Grid>

                <Grid item xs={12}>
                    <Box
                        sx={{
                            display: "flex",
                            alignItems: "center",
                            bgcolor: "rgba(255, 255, 255, 0.1)", // ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏ö‡∏•‡∏≠‡∏à‡∏≤‡∏á‡πÜ
                            borderRadius: 1,
                            p: 1.5,
                        }}
                    >
                        <FormControlLabel
                            control={
                                <Switch
                                    checked={form.usage === "TH"}
                                    onChange={handleSwitchChange}
                                    sx={{
                                        "& .MuiSwitch-switchBase.Mui-checked": {
                                            color: "#ffeb3b", // ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î
                                        },
                                        "& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track": {
                                            backgroundColor: "#fdd835", // ‡πÅ‡∏ó‡∏£‡πá‡∏Ñ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
                                        },
                                    }}
                                />
                            }
                            label={
                                <Typography sx={{ color: "#fff", fontWeight: "bold" }}>
                                    ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤: {form.usage}
                                </Typography>
                            }
                        />
                    </Box>
                </Grid>

                {/* ‡πÑ‡∏ü‡∏•‡πå */}
                <Grid item xs={12} sm={6}>
                    <Button variant="contained" component="label" color="success" fullWidth>
                        ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå ‡∏£‡∏π‡∏õ banner
                        <input type="file" hidden onChange={handleChange("bannerFile")} />
                    </Button>
                    {form.bannerFile && (
                        <Typography variant="body2" sx={{ color: "#f1f8e9" }}>
                            {form.bannerFile.name}
                        </Typography>
                    )}
                </Grid>

                <Grid item xs={12} sm={6}>
                    <Button variant="contained" component="label" color="success" fullWidth>
                        ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå ‡∏£‡∏π‡∏õ‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                        <input type="file" hidden onChange={handleChange("detailFile")} />
                    </Button>
                    {form.detailFile && (
                        <Typography variant="body2" sx={{ color: "#f1f8e9" }}>
                            {form.detailFile.name}
                        </Typography>
                    )}
                </Grid>

                {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
                <Grid item xs={12}>
                    <Typography variant="subtitle1" sx={{ mt: 2, mb: 1 }}>
                        üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                    </Typography>
                </Grid>

                <Grid item xs={12}>
                    <TextField
                        fullWidth
                        variant="filled"
                        label="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤"
                        multiline
                        minRows={3}
                        value={form.history}
                        onChange={handleChange("history")}
                        InputProps={{
                            style: {
                                color: "#f1f8e9",
                                backgroundColor: "#1b5e20",
                            },
                        }}
                        InputLabelProps={{ style: { color: "#c8e6c9" } }}
                    />
                </Grid>

                {[["‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°", "activity"], ["‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢", "expense"], ["‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Å‡∏≤‡∏£", "food"], ["‡∏§‡∏î‡∏π‡∏Å‡∏≤‡∏•‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", "tourismSeason"]].map(([label, key]) => (
                    <Grid item xs={12} sm={6} key={key}>
                        <TextField
                            fullWidth
                            variant="filled"
                            label={label}
                            value={form[key]}
                            onChange={handleChange(key)}
                            InputProps={{
                                style: {
                                    color: "#f1f8e9",
                                    backgroundColor: "#1b5e20",
                                },
                            }}
                            InputLabelProps={{ style: { color: "#c8e6c9" } }}
                        />
                    </Grid>
                ))}

                {/* ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏° */}
                <Grid item xs={12}>
                    <Typography variant="subtitle1" sx={{ mt: 2, mb: 1 }}>
                        üå± ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô & ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
                    </Typography>
                </Grid>

                {[
                    ["‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", "tourControl"],
                    ["‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏ü‡πâ‡∏≤", "electricityUsage"],
                    ["‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ô‡πâ‡∏≥", "waterUsage"],
                    ["‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ç‡∏¢‡∏∞", "garbageUsage"],
                    ["‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ô‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢", "waterTreatment"],
                    ["‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î", "cleaning"],
                    ["‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß", "tourismSystemChange"],
                ].map(([label, key]) => (
                    <Grid item xs={12} sm={6} key={key}>
                        <TextField
                            fullWidth
                            variant="filled"
                            label={label}
                            value={form[key]}
                            onChange={handleChange(key)}
                            InputProps={{
                                style: {
                                    color: "#f1f8e9",
                                    backgroundColor: "#1b5e20",
                                },
                            }}
                            InputLabelProps={{ style: { color: "#c8e6c9" } }}
                        />
                    </Grid>
                ))}

                {/* ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
                <Grid item xs={12}>
                    <Typography variant="subtitle1" sx={{ mt: 2, mb: 1 }}>
                        üìû ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
                    </Typography>
                </Grid>

                {[
                    ["‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà", "contact"],
                    ["‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á", "address"],
                ].map(([label, key]) => (
                    <Grid item xs={12} sm={6} key={key}>
                        <TextField
                            fullWidth
                            variant="filled"
                            label={label}
                            value={form[key]}
                            onChange={handleChange(key)}
                            InputProps={{
                                style: {
                                    color: "#f1f8e9",
                                    backgroundColor: "#1b5e20",
                                },
                            }}
                            InputLabelProps={{ style: { color: "#c8e6c9" } }}
                        />
                    </Grid>
                ))}

                <Grid item xs={12}>
                    <TextField
                        fullWidth
                        variant="filled"
                        label="Google Map (latitude,longitude)"
                        value={form.googleMap}
                        onChange={handleChange("googleMap")}
                        multiline
                        minRows={2}
                        placeholder="‡πÄ‡∏ä‡πà‡∏ô 16.76031995300121, 103.33303807244201"
                        InputProps={{
                            style: {
                                color: "#f1f8e9",
                                backgroundColor: "#1b5e20",
                            },
                        }}
                        InputLabelProps={{ style: { color: "#c8e6c9" } }}
                    />
                </Grid>
                <Grid item xs={12}>
                    <TextField
                        fullWidth
                        variant="filled"
                        label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏"
                        value={form.remark}
                        onChange={handleChange("remark")}
                        InputProps={{
                            style: {
                                color: "#f1f8e9",
                                backgroundColor: "#1b5e20",
                            },
                        }}
                        InputLabelProps={{ style: { color: "#c8e6c9" } }}
                    />
                </Grid>

                {/* ‡∏õ‡∏∏‡πà‡∏° */}
                <Grid item xs={12} display="flex" justifyContent="flex-end" gap={2}>
                    <Button variant="contained" color="error" style={{ color: 'white' }} onClick={handleCancel}>
                        ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </Button>
                    <Button variant="contained" color="success" type="submit">
                        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                    </Button>
                </Grid>
            </Grid>
        </Box>


    );
}

export default MainAddPlaces