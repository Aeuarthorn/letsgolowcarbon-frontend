import React, { useState } from 'react';
import {
    Button,
    Box,
    Typography,
    Paper,
    Stack,
    styled,
    LinearProgress,
    IconButton,
    Grid,
    Select,
    InputLabel,
    FormControl,
    MenuItem
} from '@mui/material';
import PhotoCamera from '@mui/icons-material/PhotoCamera';
import DeleteIcon from '@mui/icons-material/Delete';
import VideocamIcon from '@mui/icons-material/Videocam'; // ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠

// ‡∏™‡∏£‡πâ‡∏≤‡∏á input component ‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà
const VisuallyHiddenInput = styled('input')({
    clip: 'rect(0 0 0 0)',
    clipPath: 'inset(50%)',
    height: 1,
    overflow: 'hidden',
    position: 'absolute',
    bottom: 0,
    left: 0,
    whiteSpace: 'nowrap',
    width: 1,
});
// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á
const districts = [
    { value: '1001', label: '‡πÄ‡∏°‡∏∑‡∏≠‡∏á' },
    { value: '1002', label: '‡∏ö‡∏≤‡∏á‡πÉ‡∏´‡∏ç‡πà' },
    { value: '1003', label: '‡∏™‡∏≤‡∏°‡∏û‡∏£‡∏≤‡∏ô' },
    { value: '1004', label: '‡∏•‡∏≥‡∏•‡∏π‡∏Å‡∏Å‡∏≤' },
    { value: '1005', label: '‡∏´‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà' },
];

function MainEditImagesAndVDO() {
    // image
    const [imageFile, setImageFile] = useState(null);
    const [fileName, setFileName] = useState('');
    const [uploading, setUploading] = useState(false);
    const [progress, setProgress] = useState(0);
    const [selectedDistrictImg, setSelectedDistrictImg] = useState(''); // State ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û

    // vdo
    const [videoFile, setVideoFile] = useState(null);
    const [fileNamevdo, setFileNamevdo] = useState('');
    const [uploadingvdo, setUploadingvdo] = useState(false);
    const [progressvdo, setProgressvdo] = useState(0);
    const [selectedDistrictVdo, setSelectedDistrictVdo] = useState(''); // State ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠


    // ----------------- IMG ------------------ //
    const handleFileChangeImg = (event) => {
        const file = event.target.files[0];
        if (file) {
            setImageFile(file);
            setFileName(file.name);
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
            setProgress(0);
            setUploading(false);
        }
    };

    const handleUploadImg = () => {
        if (!imageFile) return;

        setUploading(true);
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
        const interval = setInterval(() => {
            setProgress((oldProgress) => {
                if (oldProgress === 100) {
                    clearInterval(interval);
                    setUploading(false);
                    return 100;
                }
                const diff = Math.random() * 15;
                return Math.min(oldProgress + diff, 100);
            });
        }, 500);
    };

    const handleRemoveImg = () => {
        setImageFile(null);
        setFileName('');
        setProgress(0);
        setUploading(false);
    };
    // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Image
    const handleDistrictChangeImg = (event) => {
        setSelectedDistrictImg(event.target.value);
    };


    // ----------------- VDO ------------------ //
    const handleFileChangeVdo = (event) => {
        const file = event.target.files[0];
        if (file) {
            setVideoFile(file);
            setFileName(file.name);
            setProgress(0);
            setUploading(false);
        }
    };

    const handleUploadVdo = () => {
        if (!videoFile) return;

        setUploading(true);
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
        const interval = setInterval(() => {
            setProgress((oldProgress) => {
                if (oldProgress === 100) {
                    clearInterval(interval);
                    setUploading(false);
                    return 100;
                }
                const diff = Math.random() * 10; // ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÉ‡∏´‡πâ progress ‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
                return Math.min(oldProgress + diff, 100);
            });
        }, 800);
    };

    const handleRemoveVdo = () => {
        setVideoFile(null);
        setFileName('');
        setProgress(0);
        setUploading(false);
    };
    // Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Video
    const handleDistrictChangeVdo = (event) => {
        setSelectedDistrictVdo(event.target.value);
    };


    return (
        <Box
            sx={{
                p: { xs: 2, sm: 4, md: 6 }, // ‡πÄ‡∏û‡∏¥‡πà‡∏° padding ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≠‡πÉ‡∏´‡∏ç‡πà
                // backgroundColor: 'background.default', // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Theme
                minHeight: "100vh",
            }}
        >
            <Grid container spacing={4} justifyContent="center" alignItems="flex-start">

                {/* -------------------- ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û -------------------- */}
                <Grid item xs={12} md={6}> {/* xs=12 ‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠, md=6 ‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏à‡∏≠ */}
                    {/* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
                    <Paper
                        elevation={3}
                        sx={{
                            p: 4,
                            maxWidth: 500,
                            width: '100%',
                            borderRadius: 2
                        }}
                    >
                        <Typography
                            variant="h5"
                            component="h1"
                            gutterBottom
                            align="center"
                            color="primary" // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏à‡∏≤‡∏Å theme
                            sx={{ fontWeight: 'bold' }}
                        >
                            ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ö‡∏£‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ üì∏
                        </Typography>

                        <Stack spacing={2} mt={3}>
                            {/* Select ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
                            <FormControl fullWidth disabled={uploading}>
                                <InputLabel id="district-select-img-label">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</InputLabel>
                                <Select
                                    labelId="district-select-img-label"
                                    id="district-select-img"
                                    value={selectedDistrictImg}
                                    label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠"
                                    onChange={handleDistrictChangeImg}
                                    color="primary" // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏à‡∏≤‡∏Å theme
                                >
                                    {districts.map((district) => (
                                        <MenuItem key={district.value} value={district.value}>
                                            {district.label}
                                        </MenuItem>
                                    ))}
                                </Select>
                            </FormControl>
                            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå */}
                            <Button
                                component="label"
                                role={undefined}
                                variant="contained"
                                tabIndex={-1}
                                startIcon={<PhotoCamera />}
                                color="secondary" // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡πÜ ‡∏Å‡πá‡πÑ‡∏î‡πâ
                                sx={{
                                    height: 56,
                                    backgroundColor: '#81C784', // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
                                    '&:hover': { backgroundColor: '#66BB6A' }
                                }}
                                disabled={uploading}
                            >
                                ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà
                                <VisuallyHiddenInput type="file" accept="image/*" onChange={handleFileChangeImg} />
                            </Button>

                            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö */}
                            {fileName && (
                                <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>
                                    <Typography variant="body1" sx={{ flexGrow: 1, color: 'text.secondary' }}>
                                        ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: **{fileName}**
                                    </Typography>
                                    <IconButton
                                        aria-label="delete"
                                        onClick={handleRemoveImg}
                                        disabled={uploading}
                                        color="error"
                                    >
                                        <DeleteIcon />
                                    </IconButton>
                                </Box>
                            )}

                            {/* Progress Bar ‡∏Ç‡∏ì‡∏∞‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î */}
                            {uploading && (
                                <Box sx={{ width: '100%', mt: 2 }}>
                                    <LinearProgress
                                        variant="determinate"
                                        value={progress}
                                        color="primary" // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏à‡∏≤‡∏Å theme
                                    />
                                    <Typography variant="body2" color="text.secondary" align="center" sx={{ mt: 1 }}>
                                        ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î... {Math.round(progress)}%
                                    </Typography>
                                </Box>
                            )}

                            <Box sx={{ pt: 2, display: 'flex', gap: 2, justifyContent: 'center' }}>
                                {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å - ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏£‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ */}
                                <Button
                                    variant="outlined"
                                    onClick={handleRemoveImg}
                                    sx={{ width: '50%' }}
                                    disabled={uploading}
                                >
                                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                                </Button>
                                {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å - ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß) */}
                                <Button
                                    variant="contained"
                                    color="primary"
                                    onClick={handleUploadImg}
                                    sx={{ width: '50%' }}
                                    disabled={!imageFile || uploading}
                                >
                                    {uploading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'}
                                </Button>
                            </Box>
                        </Stack>
                    </Paper>
                </Grid>
                {/* <Grid item xs={12} md={6}> 
                    <Paper
                        elevation={3}
                        sx={{
                            p: 4,
                            maxWidth: 500,
                            width: '100%',
                            borderRadius: 2
                        }}
                    >
                        <Typography
                            variant="h5"
                            component="h1"
                            gutterBottom
                            align="center"
                            color="primary"
                            sx={{ fontWeight: 'bold' }}
                        >
                            ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ üé•
                        </Typography>

                        <Stack spacing={2} mt={3}>
                            <FormControl fullWidth disabled={uploadingvdo}>
                                <InputLabel id="district-select-vdo-label">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</InputLabel>
                                <Select
                                    labelId="district-select-vdo-label"
                                    id="district-select-vdo"
                                    value={selectedDistrictVdo}
                                    label="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≥‡πÄ‡∏†‡∏≠"
                                    onChange={handleDistrictChangeVdo}
                                    color="primary"
                                >
                                    {districts.map((district) => (
                                        <MenuItem key={district.value} value={district.value}>
                                            {district.label}
                                        </MenuItem>
                                    ))}
                                </Select>
                            </FormControl>
                            <Button
                                component="label"
                                role={undefined}
                                variant="contained"
                                tabIndex={-1}
                                startIcon={<VideocamIcon />}
                                color="secondary"
                                sx={{
                                    height: 56,
                                    backgroundColor: '#81C784',
                                    '&:hover': { backgroundColor: '#66BB6A' }
                                }}
                                disabled={uploadingvdo}
                            >
                                ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                                <VisuallyHiddenInput
                                    type="file"
                                    accept="video/*" // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
                                    onChange={handleFileChangeVdo}
                                />
                            </Button>

                            {fileNamevdo && (
                                <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>
                                    <Typography variant="body1" sx={{ flexGrow: 1, color: 'text.secondary' }}>
                                        ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: **{fileNamevdo}**
                                    </Typography>
                                    <IconButton
                                        aria-label="delete"
                                        onClick={handleRemoveVdo}
                                        disabled={uploadingvdo}
                                        color="error"
                                    >
                                        <DeleteIcon />
                                    </IconButton>
                                </Box>
                            )}

                            {uploadingvdo && (
                                <Box sx={{ width: '100%', mt: 2 }}>
                                    <LinearProgress
                                        variant="determinate"
                                        value={progressvdo}
                                        color="primary"
                                    />
                                    <Typography variant="body2" color="text.secondary" align="center" sx={{ mt: 1 }}>
                                        ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î... {Math.round(progressvdo)}%
                                    </Typography>
                                </Box>
                            )}

                            <Box sx={{ pt: 2, display: 'flex', gap: 2, justifyContent: 'center' }}>
                                <Button
                                    variant="outlined"
                                    onClick={handleRemoveVdo}
                                    sx={{ width: '50%' }}
                                    disabled={uploadingvdo}
                                >
                                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                                </Button>
                                <Button
                                    variant="contained"
                                    color="primary"
                                    onClick={handleUploadVdo}
                                    sx={{ width: '50%' }}
                                    disabled={!videoFile || uploadingvdo}
                                >
                                    {uploadingvdo ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'}
                                </Button>
                            </Box>
                        </Stack>
                    </Paper>

                </Grid> */}
            </Grid>
        </Box>
    )
}

export default MainEditImagesAndVDO